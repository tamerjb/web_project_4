!function(){"use strict";class e{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasValidInputs(){return this._inputList.every((e=>e.validity.valid))}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._button=this._form.querySelector(this._submitButtonSelector),this.toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButton()})),this.resetValidation()}))}toggleButton(){this._hasValidInputs()?(this._button.disabled=!1,this._button.classList.remove(this._inactiveButtonClass)):(this._button.disabled=!0,this._button.classList.add(this._inactiveButtonClass))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}resetValidation(){this.toggleButton(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s){let{data:o,handleCardClick:r}=e;t(this,"_getCloneFromTemplate",(()=>document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0))),t(this,"_handleLikeButton",(e=>{e.target.classList.toggle("card__like-button_active")})),t(this,"_setEventListeners",(()=>{this._likeButton.addEventListener("click",(e=>{this._handleLikeButton(e)})),this._image.addEventListener("click",(e=>{this._handleCardClick(e)})),this._deleteButton.addEventListener("click",(e=>{this._element.remove()}))})),t(this,"generateCard",(()=>(this._element=this._getCloneFromTemplate(),this._image=this._element.querySelector(".card__image"),this._image.src=this._link,this._image.alt="Place in ".concat(this._txt),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__image-trash"),this._element.querySelector(".card__info-title").textContent=this._txt,this._setEventListeners(),this._element))),this._txt=o.name,this._link=o.link,this._selector=s,this._handleCardClick=r}}class o{constructor(e){this._popupElement=document.querySelector(e),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this),this._overlayClose=this._overlayClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._overlayClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._overlayClose)}_overlayClose(e){e.target.classList.contains("popup_opened")&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close)}}class r extends o{constructor(e,t){var s,o;super(e),o=()=>{super.close(),this._formElement.reset()},(s="close")in this?Object.defineProperty(this,s,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[s]=o,this._submitHandler=t,this._formElement=this._popupElement.querySelector(".popup__form")}_getInputValues(){const e=[...this._formElement.querySelectorAll(".form__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}}document.querySelector(".form");const n=document.querySelector(".profile"),i=(n.querySelector(".profile__name"),document.querySelector(".popup")),l=(n.querySelector(".profile__title"),form.querySelector(".form__input[name='name']")),a=form.querySelector(".form__input[name='title']"),c=document.querySelector(".cards"),u=(document.querySelector("#card-template"),c.querySelector(".cards__list")),d=(document.querySelector(".popup-edit-profile"),document.querySelector(".popup__form-type-add-place")),p=(d.querySelector(".form__input-type-place-name"),d.querySelector(".form__input-type-place-url"),document.querySelector(".popup-prev")),_=(p.querySelector(".popup__image"),p.querySelector(".popup__caption"),document.querySelector(".popup-place")),h=n.querySelector(".profile__edit-button"),m=n.querySelector(".profile__add-button"),y=(document.querySelectorAll(".popup__close-button"),(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch((e=>console.log()))),f=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return y("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return y("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}createCard(e){return y("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"edde3a5c-b30d-40b0-99e9-6f72ee976ddf","Content-Type":"application/json"}});console.log(f),f.getInitialCards().then((e=>{u.renderItems(e)})),f.getUserInfo().then((e=>{S.setUserInfo({name:e.name,job:e.about})})),h.addEventListener("click",(()=>{const e=S.getUserInfo();l.value=e.name,a.value=e.job,v.enableValidation(),v.toggleButton(),C.open()})),m.addEventListener("click",(()=>{L.open(),E.resetValidation()}));const b={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input-error",errorClass:"form__input-error"},v=new e(b,i),E=new e(b,_);v.enableValidation(),E.enableValidation();const S=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}}({nameSelector:".profile__name",jobSelector:".profile__title"}),g=new class extends o{constructor(e){super(e)}open(e,t){this._popupImage=this._popupElement.querySelector(".popup__image"),this._popupImage.src=e,this._popupImage.alt="A view of ".concat(t),this._popupElement.querySelector(".popup__caption").textContent=t,super.open()}}(".popup-prev");g.setEventListeners();const C=new r(".popup",(e=>{console.log("data",e),S.setUserInfo(e.name,e.title)}));C.setEventListeners();const L=new r(".popup-place",(e=>{k(e),E.resetValidation()}));L.setEventListeners();const q=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>k(e)},".cards__list");function k(e){const t=function(e){console.log("data",e),f.createCard(e).then((e=>new s(e,"#card-template",(()=>{g.open(e.link,e.name)})).generateCard()))}(e);q.addItem(t)}q.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,