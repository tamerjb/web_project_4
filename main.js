!function(){"use strict";class e{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasValidInputs(){return this._inputList.every((e=>e.validity.valid))}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._button=this._form.querySelector(this._submitButtonSelector),this.toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButton()})),this.resetValidation()}))}toggleButton(){this._hasValidInputs()?(this._button.disabled=!1,this._button.classList.remove(this._inactiveButtonClass)):(this._button.disabled=!0,this._button.classList.add(this._inactiveButtonClass))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}resetValidation(){this.toggleButton(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s,o){t(this,"_getCloneFromTemplate",(()=>document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0))),t(this,"_handleLikeButton",(e=>{e.target.classList.toggle("card__like-button_active")})),t(this,"_setEventListeners",(()=>{this._likeButton.addEventListener("click",(e=>{this._handleLikeButton(e)})),this._image.addEventListener("click",(e=>{this._handleCardClick(e)})),this._deleteButton.addEventListener("click",(e=>{this._element.remove()}))})),t(this,"generateCard",(()=>(this._element=this._getCloneFromTemplate(),this._image=this._element.querySelector(".card__image"),this._image.src=this._link,this._image.alt="Place in ".concat(this._placename),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__image-trash"),this._element.querySelector(".card__info-title").textContent=this._placename,this._setEventListeners(),this._element))),this._placename=e.placename,this._link=e.link,this._selector=s,this._handleCardClick=o}}class o{constructor(e){this._popupElement=document.querySelector(e),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this),this._overlayClose=this._overlayClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._overlayClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._overlayClose)}_overlayClose(e){e.target.classList.contains("popup_opened")&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close)}}class n extends o{constructor(e,t){var s,o;super(e),o=()=>{super.close(),this._formElement.reset()},(s="close")in this?Object.defineProperty(this,s,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[s]=o,this._submitHandler=t,this._formElement=this._popupElement.querySelector(".popup__form")}_getInputValues(){const e=[...this._formElement.querySelectorAll(".form__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}}document.querySelector(".form");const r=document.querySelector(".profile"),i=(r.querySelector(".profile__name"),document.querySelector(".popup")),l=(r.querySelector(".profile__title"),form.querySelector(".form__input[name='name']")),a=form.querySelector(".form__input[name='title']"),c=document.querySelector(".cards"),u=(document.querySelector("#card-template"),c.querySelector(".cards__list"),document.querySelector(".popup-edit-profile"),document.querySelector(".popup__form-type-add-place")),p=(u.querySelector(".form__input-type-place-name"),u.querySelector(".form__input-type-place-url"),document.querySelector(".popup-prev")),_=(p.querySelector(".popup__image"),p.querySelector(".popup__caption"),document.querySelector(".popup-place")),d=r.querySelector(".profile__edit-button"),h=r.querySelector(".profile__add-button");document.querySelectorAll(".popup__close-button"),d.addEventListener("click",(()=>{const e=v.getUserInfo();l.value=e.name,a.value=e.job,y.enableValidation(),y.toggleButton(),b.open()})),h.addEventListener("click",(()=>{S.open(),f.resetValidation()}));const m={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input-error",errorClass:"form__input-error"},y=new e(m,i),f=new e(m,_);y.enableValidation(),f.enableValidation();const v=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}}({nameSelector:".profile__name",jobSelector:".profile__title"}),E=new class extends o{constructor(e){super(e)}open(e,t){this._popupImage=this._popupElement.querySelector(".popup__image"),this._popupImage.src=e,this._popupImage.alt="A view of ".concat(t),this._popupElement.querySelector(".popup__caption").textContent=t,super.open()}}(".popup-prev");E.setEventListeners();const b=new n(".popup",(e=>{v.setUserInfo(e.name,e.title)}));b.setEventListeners();const S=new n(".popup-place",(e=>{L(e),f.resetValidation()}));S.setEventListeners();const g=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{placename:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{placename:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{placename:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{placename:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{placename:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{placename:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>L(e)},".cards__list");function L(e){const t=function(e){return new s(e,"#card-template",(()=>{E.open(e.link,e.placename)})).generateCard()}(e);g.addItem(t)}g.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,