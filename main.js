!function(){"use strict";class e{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasValidInputs(){return this._inputList.every((e=>e.validity.valid))}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._button=this._form.querySelector(this._submitButtonSelector),this.toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButton()})),this.resetValidation()}))}toggleButton(){this._hasValidInputs()?(this._button.disabled=!1,this._button.classList.remove(this._inactiveButtonClass)):(this._button.disabled=!0,this._button.classList.add(this._inactiveButtonClass))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}resetValidation(){this.toggleButton(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s,i,r){let{handleCardClick:n,handleCardDelete:o,handleLikeCard:a}=i;t(this,"_getCloneFromTemplate",(()=>document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0))),t(this,"_setEventListeners",(()=>{this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this._id)})),this._image.addEventListener("click",(()=>{this._handleCardClick(this._id)})),this._deleteButton.addEventListener("click",(()=>{this._handleCardDelete(this._id)}))})),this._text=e.name,this._link=e.link,this._selector=s,this._handleCardClick=n,this._handleCardDelete=o,this._handleLikeCard=a,this._id=e._id,this._userId=r,this._ownerId=e.owner._id,this._likes=e.likes}likeCard(e){this._likeButton.classList.add("card__like-button_active"),this._likes=e,this._likeCount.textContent=this._likes.length}dislikeCard(e){this._likeButton.classList.remove("card__like-button_active"),this._likes=e,this._likeCount.textContent=this._likes.length}isLiked(){return this._likes.some((e=>e._id===this._userId))}removeCard(){this._element.remove(),this._element=null}generateCard(){return this._element=this._getCloneFromTemplate(),this._image=this._element.querySelector(".card__image"),this._element.querySelector(".card__info-title").textContent=this._text,this._image.src=this._link,this._image.alt="Place in ".concat(this._text),this._deleteButton=this._element.querySelector(".card__image-trash"),this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this._likeButton=this._element.querySelector(".card__like-button"),this._likeCount=this._element.querySelector(".card__like-count"),this._likeCount.textContent=this._likes.length,this.isLiked()&&this.likeCard(this._likes),this._setEventListeners(),this._element}}function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){i(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),i(this,"_overlayClose",(e=>{e.target.classList.contains("popup")&&this.close()})),this._popupElement=document.querySelector(e),this.close=this.close.bind(this)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._overlayClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._overlayClose)}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",(()=>{this.close()}))}}class n extends r{constructor(e,t){var s,i;super(e),i=()=>{super.close(),this._formElement.reset()},(s="close")in this?Object.defineProperty(this,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[s]=i,this._submitHandler=t,this._formElement=this._popupElement.querySelector(".popup__form"),this._inputs=[...this._formElement.querySelectorAll(".form__input")]}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]})),console.log(this._inputs)}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}}const o=document.querySelector(".profile"),a=document.querySelector(".popup-edit-profile"),l=document.querySelector(".popup-place"),c=o.querySelector(".profile__edit-button"),h=o.querySelector(".profile__add-button"),d=document.querySelector(".profile__image-container"),u=document.querySelector(".popup__form_type_avatar"),_=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch((e=>console.log())),p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return _("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return _("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}setUserInfo(e){let{name:t,about:s}=e;return _("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s})})}createCard(e){return _("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}deleteCard(e){return _("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}likeCard(e){return _("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}dislikeCard(e){return _("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}setUserAvatar(e){return _("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"edde3a5c-b30d-40b0-99e9-6f72ee976ddf","Content-Type":"application/json"}}),m=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:i}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(i)}getUserInfo(){return{name:this._profileName.textContent,about:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}setUserAvatar(e){this._avatar.src=e}setAvatarVisible(){this._avatar.style.visibility="visible"}}({nameSelector:".profile__name",jobSelector:".profile__title",avatarSelector:".profile__image"}),v=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:q},".cards__list");let b;Promise.all([p.getInitialCards(),p.getUserInfo()]).then((e=>{let[t,s]=e;b=s._id,v.renderItems(t),m.setUserInfo(s.name,s.about),m.setUserAvatar(s.avatar)})).then((()=>m.setAvatarVisible())).catch((e=>console.log(e)));const C={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input-error",errorClass:"form__input-error"},f=new e(C,a);f.enableValidation();const E=new e(C,l);E.enableValidation();const k=new e(C,u);k.enableValidation();const y=new n(".popup",(e=>{p.setUserInfo({name:e.name,about:e.about}).then((e=>{m.getUserInfo(),m.setUserInfo({name:e.name,about:e.about}),y.close()})).catch((e=>console.log(e)))}));y.setEventListeners();const g=new n(".popup-place",(e=>{p.createCard(e).then((e=>{q(e),g.close()})).catch((e=>console.log(e)))}));g.setEventListeners();const L=new n(".popup_type_avatar",(e=>{p.setUserAvatar(e.link).then((e=>{m.setUserAvatar(e.avatar),L.close()})).catch((e=>console.log(e)))}));L.setEventListeners();const S=new class extends r{constructor(e){super(e),this._popupImage=this._popupElement.querySelector(".popup__image"),this._popupCaption=this._popupElement.querySelector(".popup__caption")}open(e,t){this._popupImage.src=e,this._popupImage.alt="A view of ".concat(t),this._popupCaption.textContent=t,super.open()}}(".popup-prev");S.setEventListeners();const I=new class extends r{setAction(e){this._submitHandler=e}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()})),super.setEventListeners()}}(".popup-type-delete-card");function q(e){const t=function(e){const t=new s(e,"#card-template",{handleCardClick:()=>{S.open(e.link,e.name)},handleCardDelete:e=>{I.open(),I.setAction((()=>{p.deleteCard(e).then((e=>{t.removeCard()})).then((()=>{I.close()})).catch((e=>console.log(e)))}))},handleLikeCard:e=>{t.isLiked()?p.dislikeCard(e).then((e=>{t.dislikeCard(e.likes)})).catch((e=>console.log(e))):p.likeCard(e).then((e=>{t.likeCard(e.likes)})).catch((e=>console.log(e)))}},b);return t.generateCard()}(e);v.addItem(t)}I.setEventListeners(),c.addEventListener("click",(()=>{const e=m.getUserInfo();y.setInputValues(e),f.enableValidation(),f.toggleButton(),y.open()})),h.addEventListener("click",(()=>{g.open(),E.resetValidation()})),d.addEventListener("click",(()=>{k.resetValidation(),L.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,